###############################################
### Backup relevant certificates and keystores.
### 
### p5k 20170823 v1.0.1
###############################################

#!/bin/sh

# Dates, dirs and files
ARCHIVEDATE=`date +%Y%m%d`
BACKUPDIR01=/opt/backups/certs
TMPFILE01=/tmp/foobar
BACKUPFILE01=/etc/pki/ca-trust/extracted/java/cacerts
BACKUPFILE02=/etc/pki/java/keystore.jks
BACKUPFILE03=/etc/pki/java/cacerts
BACKUPFILE04=/opt/jboss/domain/configuration/cacerts
BACKUPFILE05=/opt/jboss/standalone/configuration/cacerts
BACKUPFILE06=/usr/java/jdk/jre/lib/security/cacerts
BACKUPFILE07=/etc/openldap/cacerts

# Test and create backup directory
mkdir -p ${BACKUPDIR01}

# Test for the tarfile and create one if none exists
if [ ! -e "${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar.gz" ]; then
       # Add some data into a temp file and create the tarfile
	   cd ${BACKUPDIR01}
	   cat /etc/redhat-release > ${TMPFILE01}_${ARCHIVEDATE}
	   rpm -qa | grep cert 	>> 	${TMPFILE01}_${ARCHIVEDATE}
	   tar -cf ${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${TMPFILE01}_${ARCHIVEDATE}  2>/dev/null
	   
	   echo ""
	   echo "These files are going to be backed up:"
	   echo ""
	   
	   if [ -f "$BACKUPFILE01" ]; then cp ${BACKUPFILE01} ${BACKUPFILE01}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE01}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE01}_${ARCHIVEDATE}; fi
	   
	   if [ -f "$BACKUPFILE02" ]; then cp ${BACKUPFILE02} ${BACKUPFILE02}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE02}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE02}_${ARCHIVEDATE}; fi
	   
	   if [ -f "$BACKUPFILE03" ]; then cp ${BACKUPFILE03} ${BACKUPFILE03}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE03}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE03}_${ARCHIVEDATE}; fi
	   
	   if [ -f "$BACKUPFILE04" ]; then cp ${BACKUPFILE04} ${BACKUPFILE04}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE04}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE04}_${ARCHIVEDATE}; fi
	   
	   if [ -f "$BACKUPFILE05" ]; then cp ${BACKUPFILE05} ${BACKUPFILE05}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE05}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE05}_${ARCHIVEDATE}; fi
	   
	   if [ -f "$BACKUPFILE06" ]; then cp ${BACKUPFILE06} ${BACKUPFILE06}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE06}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE06}_${ARCHIVEDATE}; fi
	   
	   if [ -f "$BACKUPFILE07" ]; then cp ${BACKUPFILE07} ${BACKUPFILE07}_${ARCHIVEDATE}; tar --append --file=${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar ${BACKUPFILE07}_${ARCHIVEDATE} 2>/dev/null; ls -al ${BACKUPFILE07}_${ARCHIVEDATE}; fi

	   gzip ${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar
	   ls -al ${TMPFILE01}_${ARCHIVEDATE}
	   echo ""
	   echo "Backup file ${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar.gz created."
	   echo ""
	   echo `ls -al ${BACKUPDIR01}/${ARCHIVEDATE}_certificates-keystores.tar.gz`
	   echo ""
	   
else
       echo ""
       echo The backup file for ${ARCHIVEDATE} already exists.
	   echo ""
fi

# Remove old cert archives after 6 months
find ${BACKUPDIR01}/ -name "*certificates-keystores.tar.gz" -mtime +182 -exec rm -f {} +

# We are done here.
